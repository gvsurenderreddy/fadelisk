#!/usr/bin/python -OO

"""
Fadelisk application launcher script

Adds library paths, imports packages, then instantiates and runs
the Fadelisk application.
"""

from __future__ import print_function
import sys
from os.path import basename, dirname, exists, join, realpath
# sys.dont_write_bytecode = True

def error(message):
    """Print error message prefixed with the basename of the running script"""
    print('%s: %s' % (basename(__file__), message), file=sys.stderr)

def prepend_path(path):
    """Prepend a directory to the system path"""
    if not exists(path):
        error("skipping addition of nonexistent path %s" % path)
        return
    sys.path.insert(0, path)

def realjoin(*args):
    """Join directory path parts and resolve them to their real path"""
    return realpath(join(*args))

def add_relative_libs(*args):
    """Add a path relative to the parent directory of launcher"""
    script = realpath(__file__)                     # get full, absolute path
    script_parent = realjoin(dirname(script), '..') # find parent directory
    prepend_path(realjoin(script_parent, *args))    # add relative path

def launch_application():
    """Add relative paths, import packages, and launch the application"""
    add_relative_libs('lib', 'python')
    import fadelisk
    fadelisk.begins()

launch_application()

